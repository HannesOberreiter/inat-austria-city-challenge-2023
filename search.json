[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "",
    "text": "https://www.citynaturechallenge.at/\ninaturalist.org/projects/city-nature-challenges-in-oesterreich-2023\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    group_by(project.name) |&gt;\n    summarise(n = n()) |&gt;\n    ggplot(\n      aes(x = reorder(project.name, n), y = n, fill = project.name)\n      ) +\n    geom_bar(stat = \"identity\", show.legend = FALSE) +\n    coord_flip() +\n    labs(x = \"\", y = \"Anzahl der Beobachtungen\")+\n    theme(\n      panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Anzahl der Beobachtungen in den einzelnen Projekt Regionen"
  },
  {
    "objectID": "index.html#indizes-zwischen-den-regionen",
    "href": "index.html#indizes-zwischen-den-regionen",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Indizes zwischen den Regionen",
    "text": "Indizes zwischen den Regionen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    group_by(project.name) |&gt;\n    summarise(\n      nObserver = n_distinct(user.name),\n      nObservations = n(),\n      nTaxa = n_distinct(scientificName),\n      nResearchGrade = sum(quality_grade == \"research\"),\n      ) |&gt;\n    select(\"Region\" = project.name, \"BeobachterIn\" = nObserver, \"Beobachtungen\" = nObservations, \"Taxa\" = nTaxa, \"Research Grade\" = nResearchGrade) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "index.html#beobachtungen-regnum",
    "href": "index.html#beobachtungen-regnum",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Beobachtungen Regnum",
    "text": "Beobachtungen Regnum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    drop_na(kingdom) |&gt; \n    count(kingdom, project.name) |&gt; \n    select(n, \"Region\" = project.name, kingdom) |&gt;\n    ggplot() +\n      aes(x = kingdom, y = n, fill = Region) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = TRUE) +\n      labs(\n        y = \"Beobachtungen pro Reich [#]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::label_number(scale_cut = cut_short_scale()),\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: Absolute Anzahl der Beobachtungen pro Reich, aufgeteilt in teilnehmende Regionen\n\n\n\n\n\n\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\n\n\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:36:09."
  },
  {
    "objectID": "index.html#allgemeine-information",
    "href": "index.html#allgemeine-information",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 3881 Beobachtungen von 191 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 20.3 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 9. Auf Spezies-Ebene wurden 785 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "index.html#beobachtungskarte",
    "href": "index.html#beobachtungskarte",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "index.html#fun-facts",
    "href": "index.html#fun-facts",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) Peter Holub hat 19 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin lienbacher die Art Helix pomatia, die er/sie bereits 17 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Cylindroiulus caeruleocinctus, das 29 Zeichen lang ist."
  },
  {
    "objectID": "index.html#diversität-indexes",
    "href": "index.html#diversität-indexes",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.05. Die Anzahl der Arten in dieser Ordnung beträgt 333.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 0.01 ist."
  },
  {
    "objectID": "index.html#top-10-beobachterinnen",
    "href": "index.html#top-10-beobachterinnen",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "index.html#top-10-taxa-spezies-ebene",
    "href": "index.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "index.html#unique-taxa-mit-research-grade",
    "href": "index.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "index.html#beobachtungs-qualität",
    "href": "index.html#beobachtungs-qualität",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "index.html#beobachtungen-phylum",
    "href": "index.html#beobachtungen-phylum",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 6: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "index.html#insecta---ordnungen",
    "href": "index.html#insecta---ordnungen",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 7: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "index.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "index.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "index.html#rote-liste",
    "href": "index.html#rote-liste",
    "title": "City Nature Challenges in Österreich, 28. April – 1. Mai 2023",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_about.html",
    "href": "page_about.html",
    "title": "About",
    "section": "",
    "text": "Auswertung der Österreichischen iNaturalist City Challenge. Seite wird automatisch alle paar Stunden aktualisiert während dem Event. Die Daten werden von iNaturalist bereitgestellt.\n\nMade by Hannes Oberreiter with the help of R, Quarto and many other great Open Source tools."
  },
  {
    "objectID": "page_amstetten.html",
    "href": "page_amstetten.html",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-amstetten\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:36:57."
  },
  {
    "objectID": "page_amstetten.html#allgemeine-information",
    "href": "page_amstetten.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 108 Beobachtungen von 4 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 27 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 30.5. Auf Spezies-Ebene wurden 73 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_amstetten.html#beobachtungskarte",
    "href": "page_amstetten.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_amstetten.html#fun-facts",
    "href": "page_amstetten.html#fun-facts",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) frank007 hat 9 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin frank007 die Art Ajuga reptans, die er/sie bereits 2 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Euphorbia amygdaloides, das 22 Zeichen lang ist."
  },
  {
    "objectID": "page_amstetten.html#diversität-indexes",
    "href": "page_amstetten.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.63. Die Anzahl der Arten in dieser Ordnung beträgt 6.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 0.35 ist."
  },
  {
    "objectID": "page_amstetten.html#top-10-beobachterinnen",
    "href": "page_amstetten.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_amstetten.html#top-10-taxa-spezies-ebene",
    "href": "page_amstetten.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_amstetten.html#unique-taxa-mit-research-grade",
    "href": "page_amstetten.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_amstetten.html#beobachtungs-qualität",
    "href": "page_amstetten.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_amstetten.html#beobachtungen-phylum",
    "href": "page_amstetten.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_amstetten.html#insecta---ordnungen",
    "href": "page_amstetten.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_amstetten.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_amstetten.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_amstetten.html#rote-liste",
    "href": "page_amstetten.html#rote-liste",
    "title": "City Nature Challenge 2023: Amstetten",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_graz.html",
    "href": "page_graz.html",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "",
    "text": "https://www.inaturalist.org/projects/city-nature-challenge-2023-graz-bis-tierwelt-herberstei\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:37:40."
  },
  {
    "objectID": "page_graz.html#allgemeine-information",
    "href": "page_graz.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 2079 Beobachtungen von 85 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 24.5 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 12. Auf Spezies-Ebene wurden 574 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_graz.html#beobachtungskarte",
    "href": "page_graz.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_graz.html#fun-facts",
    "href": "page_graz.html#fun-facts",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) Franz Hillebrand hat 5 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin lienbacher die Art Helix pomatia, die er/sie bereits 17 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Cylindroiulus caeruleocinctus, das 29 Zeichen lang ist."
  },
  {
    "objectID": "page_graz.html#diversität-indexes",
    "href": "page_graz.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.06. Die Anzahl der Arten in dieser Ordnung beträgt 285.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 0.01 ist."
  },
  {
    "objectID": "page_graz.html#top-10-beobachterinnen",
    "href": "page_graz.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_graz.html#top-10-taxa-spezies-ebene",
    "href": "page_graz.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_graz.html#unique-taxa-mit-research-grade",
    "href": "page_graz.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_graz.html#beobachtungs-qualität",
    "href": "page_graz.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_graz.html#beobachtungen-phylum",
    "href": "page_graz.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_graz.html#insecta---ordnungen",
    "href": "page_graz.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_graz.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_graz.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_graz.html#rote-liste",
    "href": "page_graz.html#rote-liste",
    "title": "City Nature Challenge 2023: Graz bis Tierwelt Herberstein",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_industrieviertel.html",
    "href": "page_industrieviertel.html",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-industrieviertel\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:38:24."
  },
  {
    "objectID": "page_industrieviertel.html#allgemeine-information",
    "href": "page_industrieviertel.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 72 Beobachtungen von 22 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 3.3 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 2. Auf Spezies-Ebene wurden 30 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_industrieviertel.html#beobachtungskarte",
    "href": "page_industrieviertel.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_industrieviertel.html#fun-facts",
    "href": "page_industrieviertel.html#fun-facts",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) NA hat NA Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin Julia Bauder die Art Panemeria tenebrata, die er/sie bereits 2 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Ornithogalum orthophyllum, das 25 Zeichen lang ist."
  },
  {
    "objectID": "page_industrieviertel.html#diversität-indexes",
    "href": "page_industrieviertel.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.38. Die Anzahl der Arten in dieser Ordnung beträgt 15.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 0.14 ist."
  },
  {
    "objectID": "page_industrieviertel.html#top-10-beobachterinnen",
    "href": "page_industrieviertel.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_industrieviertel.html#top-10-taxa-spezies-ebene",
    "href": "page_industrieviertel.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_industrieviertel.html#unique-taxa-mit-research-grade",
    "href": "page_industrieviertel.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_industrieviertel.html#beobachtungs-qualität",
    "href": "page_industrieviertel.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_industrieviertel.html#beobachtungen-phylum",
    "href": "page_industrieviertel.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_industrieviertel.html#insecta---ordnungen",
    "href": "page_industrieviertel.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_industrieviertel.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_industrieviertel.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_industrieviertel.html#rote-liste",
    "href": "page_industrieviertel.html#rote-liste",
    "title": "City Nature Challenge 2023: Industrieviertel",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_innsbruck.html",
    "href": "page_innsbruck.html",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-innsbruck\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:39:08."
  },
  {
    "objectID": "page_innsbruck.html#allgemeine-information",
    "href": "page_innsbruck.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 42 Beobachtungen von 3 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 14 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 1. Auf Spezies-Ebene wurden 29 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_innsbruck.html#beobachtungskarte",
    "href": "page_innsbruck.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_innsbruck.html#fun-facts",
    "href": "page_innsbruck.html#fun-facts",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) biscuitchocolate hat 1 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin Ines Aster die Art Cepaea hortensis, die er/sie bereits 2 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Exochomus quadripustulatus, das 26 Zeichen lang ist."
  },
  {
    "objectID": "page_innsbruck.html#diversität-indexes",
    "href": "page_innsbruck.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.69. Die Anzahl der Arten in dieser Ordnung beträgt 2.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 1 ist."
  },
  {
    "objectID": "page_innsbruck.html#top-10-beobachterinnen",
    "href": "page_innsbruck.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_innsbruck.html#top-10-taxa-spezies-ebene",
    "href": "page_innsbruck.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_innsbruck.html#unique-taxa-mit-research-grade",
    "href": "page_innsbruck.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_innsbruck.html#beobachtungs-qualität",
    "href": "page_innsbruck.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_innsbruck.html#beobachtungen-phylum",
    "href": "page_innsbruck.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_innsbruck.html#insecta---ordnungen",
    "href": "page_innsbruck.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_innsbruck.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_innsbruck.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_innsbruck.html#rote-liste",
    "href": "page_innsbruck.html#rote-liste",
    "title": "City Nature Challenge 2023: Innsbruck",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_klagenfurt.html",
    "href": "page_klagenfurt.html",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-klagenfurt\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:39:51."
  },
  {
    "objectID": "page_klagenfurt.html#allgemeine-information",
    "href": "page_klagenfurt.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 1385 Beobachtungen von 68 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 20.4 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 13. Auf Spezies-Ebene wurden 268 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_klagenfurt.html#beobachtungskarte",
    "href": "page_klagenfurt.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_klagenfurt.html#fun-facts",
    "href": "page_klagenfurt.html#fun-facts",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) Peter Holub hat 19 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin Emin Biber die Art Homo sapiens, die er/sie bereits 6 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Coccothraustes coccothraustes, das 29 Zeichen lang ist."
  },
  {
    "objectID": "page_klagenfurt.html#diversität-indexes",
    "href": "page_klagenfurt.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.33. Die Anzahl der Arten in dieser Ordnung beträgt 22.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 0.11 ist."
  },
  {
    "objectID": "page_klagenfurt.html#top-10-beobachterinnen",
    "href": "page_klagenfurt.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_klagenfurt.html#top-10-taxa-spezies-ebene",
    "href": "page_klagenfurt.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_klagenfurt.html#unique-taxa-mit-research-grade",
    "href": "page_klagenfurt.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_klagenfurt.html#beobachtungs-qualität",
    "href": "page_klagenfurt.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_klagenfurt.html#beobachtungen-phylum",
    "href": "page_klagenfurt.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_klagenfurt.html#insecta---ordnungen",
    "href": "page_klagenfurt.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_klagenfurt.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_klagenfurt.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_klagenfurt.html#rote-liste",
    "href": "page_klagenfurt.html#rote-liste",
    "title": "City Nature Challenge 2023: Klagenfurt",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_krems-wachau-melk.html",
    "href": "page_krems-wachau-melk.html",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-krems-wachau-melk\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:40:34."
  },
  {
    "objectID": "page_krems-wachau-melk.html#allgemeine-information",
    "href": "page_krems-wachau-melk.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 89 Beobachtungen von 4 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 22.2 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 14. Auf Spezies-Ebene wurden 67 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_krems-wachau-melk.html#beobachtungskarte",
    "href": "page_krems-wachau-melk.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_krems-wachau-melk.html#fun-facts",
    "href": "page_krems-wachau-melk.html#fun-facts",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) Reinhard Kraus hat 1 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin Reinhard Kraus die Art Euonymus europaeus, die er/sie bereits 2 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Chamaecytisus ratisbonensis, das 27 Zeichen lang ist."
  },
  {
    "objectID": "page_krems-wachau-melk.html#diversität-indexes",
    "href": "page_krems-wachau-melk.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0. Die Anzahl der Arten in dieser Ordnung beträgt 1.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall NaN ist."
  },
  {
    "objectID": "page_krems-wachau-melk.html#top-10-beobachterinnen",
    "href": "page_krems-wachau-melk.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_krems-wachau-melk.html#top-10-taxa-spezies-ebene",
    "href": "page_krems-wachau-melk.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_krems-wachau-melk.html#unique-taxa-mit-research-grade",
    "href": "page_krems-wachau-melk.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_krems-wachau-melk.html#beobachtungs-qualität",
    "href": "page_krems-wachau-melk.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_krems-wachau-melk.html#beobachtungen-phylum",
    "href": "page_krems-wachau-melk.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_krems-wachau-melk.html#insecta---ordnungen",
    "href": "page_krems-wachau-melk.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_krems-wachau-melk.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_krems-wachau-melk.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_krems-wachau-melk.html#rote-liste",
    "href": "page_krems-wachau-melk.html#rote-liste",
    "title": "City Nature Challenge 2023: Krems - Wachau - Melk",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html",
    "href": "page_nationalpark_gesaeuse.html",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-nationalparkregion-gesaeuse\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:41:18."
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#allgemeine-information",
    "href": "page_nationalpark_gesaeuse.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 83 Beobachtungen von 1 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 83 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 83. Auf Spezies-Ebene wurden 27 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#beobachtungskarte",
    "href": "page_nationalpark_gesaeuse.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#fun-facts",
    "href": "page_nationalpark_gesaeuse.html#fun-facts",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) NA hat NA Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin alexmaringer die Art Daphne mezereum, die er/sie bereits 3 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Cardamine enneaphyllos, das 22 Zeichen lang ist."
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#diversität-indexes",
    "href": "page_nationalpark_gesaeuse.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: 0.69. Die Anzahl der Arten in dieser Ordnung beträgt 2.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall 1 ist."
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#top-10-beobachterinnen",
    "href": "page_nationalpark_gesaeuse.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#top-10-taxa-spezies-ebene",
    "href": "page_nationalpark_gesaeuse.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#unique-taxa-mit-research-grade",
    "href": "page_nationalpark_gesaeuse.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#beobachtungs-qualität",
    "href": "page_nationalpark_gesaeuse.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#beobachtungen-phylum",
    "href": "page_nationalpark_gesaeuse.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#insecta---ordnungen",
    "href": "page_nationalpark_gesaeuse.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_nationalpark_gesaeuse.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_gesaeuse.html#rote-liste",
    "href": "page_nationalpark_gesaeuse.html#rote-liste",
    "title": "City Nature Challenge 2023: Nationalparkregion Gesäuse",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "",
    "text": "inaturalist.org/projects/city-nature-challenge-2023-neusiedler-see-seewinkel\nCode\nnextRender &lt;- lubridate::ymd_hms(Sys.time(), tz = \"Europe/Vienna\", quiet = TRUE) + lubridate::hours(4)\nHinweis: Die Seite wird circa alle 4 Stunden mit neuen Daten befüllt. Nächstes Update um circa 2023-04-28 20:42:00."
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#allgemeine-information",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#allgemeine-information",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Allgemeine Information",
    "text": "Allgemeine Information\n\n\nCode\nif(!is.null(obsResults)){\n  distinctObserver &lt;- obsResults$user.id |&gt; unique()\n  distinctSpecies &lt;- obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    pull(scientificName) |&gt;\n    unique()\n\n  statsObserver &lt;- obsResults |&gt; \n    count(user.id) |&gt;\n    summarise(\n        mean = round(mean(n), 1),\n        median = median(n),\n    )\n\n} else {\n  distinctObserver &lt;- c()\n  distinctSpecies &lt;- c()\n  statsObserver &lt;- tibble(mean = c(0), median = c(0))\n}\n\n\nInsgesamt wurden 23 Beobachtungen von 4 Beobachterinnen und Beobachtern hochgeladen. Das ergibt einen Mittelwert von 5.8 Beobachtungen pro Beobachter bzw. Beobachterin und einen Median von 1.5. Auf Spezies-Ebene wurden 16 Beobachtungen hochgeladen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt;\n    count(user.id) |&gt;\n    ggplot(aes(x = n)) +\n    geom_histogram(bins = 30, fill = 'steelblue', color = 'black') +\n    labs(\n      x = 'Anzahl Beobachtungen',\n      y = 'Anzahl Beobachter/innen'\n    ) +\n    scale_y_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    scale_x_continuous(\n      breaks = scales::pretty_breaks(),\n    ) +\n    theme(\n      panel.grid.major.y = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 1: Histogramm der Beobachtungen pro Beobachter/in\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  tempDf &lt;- obsResults |&gt; \n    drop_na(time_observed_at)\n  if(nrow(tempDf) &gt; 0) {\n    obsResults |&gt; \n      drop_na(time_observed_at) |&gt;\n      mutate(\n        time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n        hour_observed_at = hms::as_hms(time_observed_at),\n        weekday_observed_at = lubridate::wday(\n          time_observed_at, \n          label = TRUE,\n          week_start = 1,\n          locale=\"de_AT\"\n          )\n      ) |&gt;\n      select(time_observed_at, weekday_observed_at, hour_observed_at)  |&gt;\n      ggplot(aes(x = hour_observed_at, fill = weekday_observed_at)) +\n      geom_histogram(binwidth = 60*60, color = 'black') +\n      labs(\n        x = 'Stunde',\n        y = 'Anzahl Beobachtungen',\n        fill = 'Wochentag'\n      ) +\n      scale_y_continuous(\n        breaks = scales::pretty_breaks(),\n      ) +\n      scale_x_time(\n        breaks = scales::breaks_width(\"1 hour\"),\n        labels = scales::label_time(format = \"%H\")\n      ) +\n      theme(\n        panel.grid.major.y = element_line()\n      ) + \n      facet_wrap(~weekday_observed_at, ncol = 1)\n  }\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 2: In welcher Stunde an welchen Wochentag wie viele Beobachtungen gemacht wurden"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungskarte",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungskarte",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Beobachtungskarte",
    "text": "Beobachtungskarte\n\n\nCode\nif(!is.null(obsResults)){\n  mapDf &lt;- obsResults |&gt;\n    drop_na(location, time_observed_at) |&gt;\n    separate(location, c('latitude', 'longitude'), sep = ',', remove = FALSE, convert = TRUE) |&gt;\n    mutate(\n      time_observed_at = lubridate::ymd_hms(time_observed_at, tz = \"Europe/Vienna\", quiet = TRUE),\n      label = glue(\"{user.name} &lt;br/&gt; {scientificName} &lt;br/&gt; {time_observed_at} &lt;br/&gt; &lt;a href='{uri}'&gt;Beobachtung auf iNat&lt;/a&gt;\"),\n      group = lubridate::wday(\n        time_observed_at, \n        label = TRUE,\n        week_start = 1,\n        locale=\"de_AT\"\n      )\n    )\n  mapDfSplit &lt;- split(mapDf, mapDf$group)\n\n  m &lt;- leaflet() |&gt; # create map with dataset\n    setView(lng = 14.12456, lat = 47.59397, zoom = 6) |&gt; # fyi geographic center of austria\n    addTiles()\n\n\n  for(name in names(mapDfSplit)){\n    if(nrow(mapDfSplit[[name]]) &gt; 0){\n    m &lt;- m |&gt;\n      addCircleMarkers(\n        data = mapDfSplit[[name]],\n        lng = ~longitude,\n        lat = ~latitude,\n        popup = ~label,\n        label = ~scientificName,\n        group = name,\n        clusterOptions = markerClusterOptions()\n      )\n    }\n  }\n  m |&gt;\n    addLayersControl(\n      overlayGroups = names(mapDfSplit),\n      options = layersControlOptions(collapsed = FALSE)\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#fun-facts",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#fun-facts",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Fun Facts",
    "text": "Fun Facts\n\n\nCode\nif(!is.null(obsResults)){\n  isBirder &lt;- obsResults |&gt;\n    filter(class=='Aves') |&gt;\n    count(user.id, user.name) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  mostDuplicatedObservations &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(user.id, user.name, scientificName) |&gt;\n    slice_max(n = 1, order_by = n, with_ties = FALSE)\n\n  longestName &lt;- obsResults |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    mutate(\n      nameLength = nchar(scientificName)\n    ) |&gt;\n    slice_max(n = 1, order_by = nameLength, with_ties = FALSE)\n} else {\n  isBirder &lt;- tibble(user.id = c(0), user.name = c(0), n = c(0))\n  mostDuplicatedObservations &lt;- tibble(user.id = c(0), user.name = c(0), scientificName = c(0), n = c(0))\n  longestName &lt;- tibble(scientificName = c(0), nameLength = c(0))\n}\n\n\nUser (auch bekannt als Birder) Peter hat 7 Vogelbeobachtungen hochgeladen - mehr als jede/r andere. Besonders liebt der User bzw. die Userin Peter die Art Corvus monedula, die er/sie bereits 2 Mal hochgeladen hat. Das Taxon mit dem längsten Namen ist Valerianella locusta, das 20 Zeichen lang ist."
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#diversität-indexes",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#diversität-indexes",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Diversität Indexes",
    "text": "Diversität Indexes\n\n\nCode\nif(!is.null(obsResults)){\n  shannonDiversity &lt;- obsResults |&gt;\n    filter(class == \"Insecta\") |&gt;\n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    add_count(class, name = 'N') |&gt;\n    count(scientificName, N) |&gt; \n    mutate(\n      relFreq = n / sum(N),\n      logRelFreq = log(relFreq)\n    ) |&gt; \n    summarise(\n      shannonDiversity = -sum(relFreq * logRelFreq),\n      speciesRichness = first(N)\n    )\n} else {\n  shannonDiversity &lt;- tibble(shannonDiversity = c(0), speciesRichness = c(0))\n}\n\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\nDie Biodiversität in einem Ökosystem kann durch verschiedene Indizes in der Ökologie gemessen werden, einer davon ist der Shannon-Index H` (Shannon-Weaver-Index). Dieser Index misst die Diversität von Arten in einem Ökosystem und liegt zwischen 0 und 1. Je höher der Index, desto größer ist die Diversität bzw. je geringer die Chance, noch einmal die gleiche Art zu entdecken.\nIn unserem Datensatz können wir den Shannon-Index H` für die Ordnung Insecta berechnen: NA. Die Anzahl der Arten in dieser Ordnung beträgt NA.\nZusätzlich können wir mit diesen Kennzahlen den Evenness-Index berechnen, der in unserem Fall NA ist."
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#top-10-beobachterinnen",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#top-10-beobachterinnen",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Top 10 Beobachter/innen",
    "text": "Top 10 Beobachter/innen\nIn dieser Liste werden auch doppelte Beobachtungen gezählt, jedoch sollte dies nicht als Tipp betrachtet werden, um an erster Stelle zu stehen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(user.id, user.name) |&gt;\n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'User' = user.name) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#top-10-taxa-spezies-ebene",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#top-10-taxa-spezies-ebene",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Top 10 Taxa (Spezies-Ebene)",
    "text": "Top 10 Taxa (Spezies-Ebene)\nIn dieser Liste sind die am häufigsten beobachteten Taxa auf Spezies-Ebene aufgeführt, die bereits identifiziert wurden. Es ist jedoch nicht erforderlich, dass diese von einer zweiten Person bestätigt wurden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(taxonRank == 'species' | taxonRank == 'subspecies') |&gt;\n    count(scientificName, vernacularName) |&gt; \n    slice_max(n = 10, order_by = n) |&gt;\n    select('Beob. [#]' = n, 'Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#unique-taxa-mit-research-grade",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#unique-taxa-mit-research-grade",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Unique Taxa mit Research-Grade",
    "text": "Unique Taxa mit Research-Grade\nBesonders erfreulich sind natürlich immer einzigartige Funde, die nur von einer Person in der Challenge hochgeladen wurden. In dieser Liste müssen jedoch alle Spezies von einer zweiten Person bestätigt werden, um den Forschungsstandard (Research-Grade) zu erreichen.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter((taxonRank == 'species' | taxonRank == 'subspecies') & quality_grade == 'research') |&gt;\n    add_count(scientificName, vernacularName) |&gt; \n    filter(n == 1) |&gt; \n    select('Wiss. Name' = scientificName, 'Umgangspr. Name' = vernacularName,  'User' = user.name, \"Link\" = uri_html) |&gt;\n    datatable(\n      rownames = FALSE, \n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(3)\n        )\n      )\n))\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungs-qualität",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungs-qualität",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Beobachtungs Qualität",
    "text": "Beobachtungs Qualität\niNaturalist unterteilt die Beobachtungsqualität in drei Kategorien. Die Kategorie “causal” umfasst Beobachtungen, bei denen mindestens eines der folgenden Elemente fehlt: das Datum der Beobachtung, der Beobachtungsort oder ein Foto (oder Tonaufnahme). Die Kategorie “needs_id” wird angezeigt, bis mindestens zwei Personen eine Spezies für diesen Upload einstimmig bestimmt haben, ohne Widerspruch. Die letzte und wertvollste Kategorie ist “research”, die bestätigte Beobachtungen auf Spezies-Ebene umfasst.\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(quality_grade) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      quality_grade = forcats::fct_reorder(quality_grade, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = quality_grade, y = np, fill = quality_grade) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Qualität [%]\",\n        x = \"\"\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 3: Verteilung der Beobachtungsqualität auf iNaturalist"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungen-phylum",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungen-phylum",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Beobachtungen Phylum",
    "text": "Beobachtungen Phylum\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    count(phylum) |&gt; \n    drop_na(phylum) |&gt; \n    arrange(desc(n)) |&gt;\n    mutate(\n      np = n / nrow(obsResults),\n      phylum = forcats::fct_reorder(phylum, np, .desc = TRUE)\n    ) |&gt; \n    ggplot() +\n      aes(x = phylum, y = np, fill = np) +\n      geom_bar(position = 'dodge', stat='identity', show.legend = FALSE) +\n      geom_text(aes(label=paste(\"n =\", n)), position=position_dodge(width=0.9), hjust=-0.25) +\n      labs(\n        y = \"Beobachtungen Phyla [%]\",\n        x = \"\"\n      ) +\n      scale_fill_viridis_c(\n        option = \"turbo\",\n      ) +\n      scale_y_continuous(\n        labels = scales::percent_format(),\n        limits = c(0, 1)\n      ) +\n      coord_flip(clip=\"off\") +\n      theme(\n        panel.grid.major.x = element_line()\n      )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 4: Relative und absolute Anzahl der Beobachtungen pro Phylum"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#insecta---ordnungen",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#insecta---ordnungen",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Insecta - Ordnungen",
    "text": "Insecta - Ordnungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsInsecta &lt;- obsResults |&gt; \n    filter(class == \"Insecta\") |&gt;\n    drop_na(order)\n\n  obsInsecta |&gt;\n    count(order) |&gt;\n    mutate(\n        p = n / nrow(obsInsecta),\n        order = forcats::fct_reorder(order, p, .desc = TRUE)\n    ) |&gt;\n    ggplot(aes(y = order, x = p, label = n, fill = p)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(nudge_x = 0.01, check_overlap = TRUE) +\n    scale_x_continuous(\n        breaks = scales::pretty_breaks(),\n        labels = scales::label_percent()\n    ) +\n    scale_fill_viridis_c(\n      option = \"turbo\",\n    ) +\n    labs(\n        y = \"Insecta - Ordnung\",\n        x = glue(\"Beobachtungen (# = {nrow(obsInsecta)}) [%]\")\n    ) +\n    theme(\n        panel.grid.major.x = element_line()\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n\n\nAbbildung 5: Ordnungen innerhalb der Klasse Insecta und deren relative und absolute Anzahl an Beobachtungen."
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungen-mit-konflikt-bestimmungen",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#beobachtungen-mit-konflikt-bestimmungen",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Beobachtungen mit Konflikt Bestimmungen",
    "text": "Beobachtungen mit Konflikt Bestimmungen\n\n\nCode\nif(!is.null(obsResults)){\n  obsResults |&gt; \n    filter(num_identification_disagreements &gt; 0) |&gt; \n    select(\"Link\" = uri_html, \"User\" = user.name, \"Taxa\" = scientificName) |&gt;\n    datatable(\n      rownames = FALSE,\n      escape = FALSE,\n      options = list(\n        columnDefs = list(list(type = 'html', targets = c(1)))\n      )\n    )\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  },
  {
    "objectID": "page_nationalpark_neusiedlersee-seewinkel.html#rote-liste",
    "href": "page_nationalpark_neusiedlersee-seewinkel.html#rote-liste",
    "title": "City Nature Challenge 2023: Neusiedler See/Seewinkel",
    "section": "Rote Liste",
    "text": "Rote Liste\nAnmerkung: Keine Ahnung wie aktuell meine Rote Liste ist.\n\n\nCode\nif(!is.null(obsResults)){\n  checkList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(annex_II) |&gt;\n    add_count(scientific_name) |&gt; \n    count(scientific_name, vernacularName, annex_II_priority, annex_II, annex_IV) |&gt; \n    arrange(scientific_name) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, annex_II_priority, annex_II, annex_IV, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nif(!is.null(obsResults)){\n  birdsList |&gt; \n    right_join(obsResults, by = c(\"scientific_name\" = \"scientificName\")) |&gt;\n    drop_na(AnnexI) |&gt;\n    arrange(scientific_name) |&gt; \n    count(scientific_name, vernacularName, AnnexI) |&gt; \n    select(\"Wiss. Name\" = scientific_name, \"Umgangspr. Name\" = vernacularName, AnnexI, \"Beob. (#)\" = n) |&gt;\n    datatable(rownames = FALSE)\n} else {\n  print('Noch keine Beobachtungen')\n}\n\n\n\n?(caption)"
  }
]